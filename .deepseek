# deepseek调用方式


## 请在Next.js项目中始终参考以下方式调用deepseek作为AI工具

import axios from 'axios';

const API_KEY = process.env.DEEPSEEK_API_KEY;

async function generateExplanation(word: string): Promise<string> {
  const response = await axios.post('https://api.deepseek.com/v1/chat/completions', {
    model: "deepseek-chat",
    messages: [
      {"role": "system", "content": "你是一个AI助手"},
      {"role": "user", "content": `"${word}"`}
    ],
    stream: false
  }, {
    headers: {
      'Authorization': `Bearer ${API_KEY}`,
      'Content-Type': 'application/json'
    }
  });
  return response.data.choices[0].message.content;
}

## 注意事项
1、上述发给AI的system和user的提示词仅作为参考，请始终根据实际情况进行调整
2、请自动帮我创建.env文件时准确保存


## 如果设计多轮对话，请参考以下对话拼接方式
### Round 1
messages = [{"role": "user", "content": "What's the highest mountain in the world?"}]
response = client.chat.completions.create(
    model="deepseek-chat",
    messages=messages
)

messages.append(response.choices[0].message)
print(f"Messages Round 1: {messages}")

### Round 2
messages.append({"role": "user", "content": "What is the second?"})
response = client.chat.completions.create(
    model="deepseek-chat",
    messages=messages
)

messages.append(response.choices[0].message)
print(f"Messages Round 2: {messages}")

